-- Lấy người chơi và camera
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait() -- Lấy nhân vật của người chơi
local camera = workspace.CurrentCamera

-- Tạo GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Tạo nút ToggleButton
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 100, 0, 50)
toggleButton.Position = UDim2.new(0.5, -50, 0.1, 0) -- Đặt nút ở giữa màn hình, phía trên
toggleButton.Text = "On"
toggleButton.Parent = screenGui

-- Biến để kiểm soát trạng thái
local isAiming = false
local aimRadius = 50 -- Bán kính ghim (đơn vị: studs)

-- Tạo một label để hiển thị bán kính hiện tại (tuỳ chọn)
local radiusLabel = Instance.new("TextLabel")
radiusLabel.Size = UDim2.new(0, 200, 0, 50)
radiusLabel.Position = UDim2.new(0.5, -100, 0.2, 0) -- Vị trí bên dưới nút
radiusLabel.Text = "Radius: " .. tostring(aimRadius)
radiusLabel.Parent = screenGui

-- Hàm tìm người chơi gần nhất trong bán kính
local function getClosestPlayerInRadius()
    local closestPlayer = nil
    local shortestDistance = aimRadius -- Chỉ tìm trong phạm vi bán kính

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (otherPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).magnitude
            if distance < shortestDistance then
                closestPlayer = otherPlayer
                shortestDistance = distance
            end
        end
    end
    return closestPlayer
end

-- Hàm ghim camera nhìn vào người chơi gần nhất
local function aimAtTarget()
    local closestPlayer = getClosestPlayerInRadius()

    -- Nếu tìm thấy người chơi trong phạm vi, camera sẽ hướng về phía người đó
    if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild("HumanoidRootPart") then
        -- Lấy vị trí của người chơi gần nhất
        local targetPosition = closestPlayer.Character.HumanoidRootPart.Position
        -- Lấy vị trí của camera hiện tại và tạo CFrame hướng về người chơi đó
        local cameraPosition = camera.CFrame.Position
        camera.CFrame = CFrame.new(cameraPosition, targetPosition)
    end
end

-- Khi nhấn nút
toggleButton.MouseButton1Click:Connect(function()
    isAiming = not isAiming -- Chuyển đổi giữa On/Off
    if isAiming then
        toggleButton.Text = "Off"
        -- Đặt chế độ camera theo nhân vật của người chơi
        camera.CameraType = Enum.CameraType.Custom
        -- Theo dõi hướng nhìn của camera mà không thay đổi vị trí
        game:GetService("RunService").RenderStepped:Connect(aimAtTarget)
    else
        toggleButton.Text = "On"
        -- Trở về chế độ camera mặc định khi tắt
        camera.CameraType = Enum.CameraType.Custom
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")

-- Tạo GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 100, 0, 50)
toggleButton.Position = UDim2.new(0.5, -50, 0.1, 0)
toggleButton.Text = "On"
toggleButton.Parent = screenGui

-- Hiển thị bán kính (tuỳ chọn)
local aimRadius = 50 -- bán kính tính theo studs
local radiusLabel = Instance.new("TextLabel")
radiusLabel.Size = UDim2.new(0, 200, 0, 50)
radiusLabel.Position = UDim2.new(0.5, -100, 0.2, 0)
radiusLabel.Text = "Radius: " .. tostring(aimRadius)
radiusLabel.Parent = screenGui

-- Hàm tìm người chơi gần nhất trong bán kính cho trước
local function getClosestPlayerInRadius()
    local closestPlayer = nil
    local shortestDistance = aimRadius
    if not character:FindFirstChild("HumanoidRootPart") then
        return nil
    end
    local hrp = character.HumanoidRootPart
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (otherPlayer.Character.HumanoidRootPart.Position - hrp.Position).Magnitude
            if distance < shortestDistance then
                closestPlayer = otherPlayer
                shortestDistance = distance
            end
        end
    end
    return closestPlayer
end

-- Hàm này sẽ được gọi mỗi khung hình (sau khi default camera cập nhật)
-- Nó giữ nguyên vị trí (được default camera tính toán) và chỉ thay đổi hướng nhìn về đối tượng mục tiêu.
local function aimOverride()
    local target = getClosestPlayerInRadius()
    if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
        local targetPos = target.Character.HumanoidRootPart.Position
        local currentPos = camera.CFrame.Position  -- vị trí camera được default camera tính toán
        camera.CFrame = CFrame.new(currentPos, targetPos)
    end
end

-- Sử dụng BindToRenderStep để đảm bảo mã chạy sau default camera cập nhật
local isAiming = false

toggleButton.MouseButton1Click:Connect(function()
    isAiming = not isAiming
    if isAiming then
        toggleButton.Text = "Off"
        -- Bind với độ ưu tiên cao hơn để override sau khi default camera đã cập nhật
        RunService:BindToRenderStep("AimOverride", Enum.RenderPriority.Camera.Value + 1, aimOverride)
    else
        toggleButton.Text = "On"
        if RunService:IsBound("AimOverride") then
            RunService:UnbindFromRenderStep("AimOverride")
        end
        -- Đảm bảo camera về chế độ mặc định
        camera.CameraType = Enum.CameraType.Custom
    end
end)

-- Hàm thay đổi bán kính (tuỳ chọn)
local function updateRadius(delta)
    aimRadius = math.clamp(aimRadius + delta, 10, 200)
    radiusLabel.Text = "Radius: " .. tostring(aimRadius)
end

-- Dùng phím W/S để tăng/giảm bán kính (hoặc thay đổi phím theo ý bạn)
player:GetMouse().KeyDown:Connect(function(key)
    if key == "w" then
        updateRadius(10)
    elseif key == "s" then
        updateRadius(-10)
    end
end)
